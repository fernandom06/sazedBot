[
    {
        "id": "6cbfdc66b09951e8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9af9f5e6a558987d",
        "type": "telegram bot",
        "botname": "Sazed",
        "usernames": "",
        "chatids": "203007605",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "a3d5094020b1387e",
        "type": "telegram command",
        "z": "6cbfdc66b09951e8",
        "name": "List Resources",
        "command": "/list_resources",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "9af9f5e6a558987d",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 160,
        "y": 160,
        "wires": [
            [
                "a207acce653642e5",
                "51501a27662c9a0f"
            ],
            []
        ]
    },
    {
        "id": "853c9ce6261dc144",
        "type": "exec",
        "z": "6cbfdc66b09951e8",
        "command": "ls /downloads",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "ls resources",
        "x": 490,
        "y": 180,
        "wires": [
            [
                "6a05255daf1c4c60",
                "1e73014ad86b4b9f"
            ],
            [],
            []
        ]
    },
    {
        "id": "6a05255daf1c4c60",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "function 2",
        "func": "let response = {}\n\nresponse.payload = {\n    \"content\": msg.payload,\n    \"type\": \"message\",\n    \"chatId\": flow.get('chatId')\n}\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "37e03dd8d78cb485"
            ]
        ]
    },
    {
        "id": "37e03dd8d78cb485",
        "type": "telegram sender",
        "z": "6cbfdc66b09951e8",
        "name": "Response",
        "bot": "9af9f5e6a558987d",
        "haserroroutput": false,
        "outputs": 1,
        "x": 860,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "31304615e760d107",
        "type": "inject",
        "z": "6cbfdc66b09951e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"chatId\": 203007605, \"messageId\": 38, \"type\": \"message\", \"content\": \"\"}",
        "payloadType": "json",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "a207acce653642e5"
            ]
        ]
    },
    {
        "id": "a207acce653642e5",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "function 3",
        "func": "flow.set('chatId', msg.payload.chatId)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "853c9ce6261dc144"
            ]
        ]
    },
    {
        "id": "51501a27662c9a0f",
        "type": "debug",
        "z": "6cbfdc66b09951e8",
        "name": "telegram",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 100,
        "wires": []
    },
    {
        "id": "54fd717913c895c9",
        "type": "inject",
        "z": "6cbfdc66b09951e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"msg\":{\"payload\":{\"content\":\"Elija mendrugo\",\"type\":\"message\",\"chatId\":203007605,\"options\":[[\"prueba\",\"mimi\"]]}}}",
        "payloadType": "json",
        "x": 690,
        "y": 80,
        "wires": [
            [
                "37e03dd8d78cb485"
            ]
        ]
    },
    {
        "id": "0fb3d994f3b7b21a",
        "type": "telegram command",
        "z": "6cbfdc66b09951e8",
        "name": "Download resource",
        "command": "/download_resource",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "9af9f5e6a558987d",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 170,
        "y": 360,
        "wires": [
            [
                "07293d5355fb1216"
            ],
            []
        ]
    },
    {
        "id": "c889df91ef6fa488",
        "type": "telegram sender",
        "z": "6cbfdc66b09951e8",
        "name": "",
        "bot": "9af9f5e6a558987d",
        "haserroroutput": false,
        "outputs": 1,
        "x": 690,
        "y": 360,
        "wires": [
            [
                "af512362318c3b0d"
            ]
        ]
    },
    {
        "id": "07293d5355fb1216",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "Message: Url to Download",
        "func": "flow.set('chatId', msg.payload.chatId)\nlet response = {}\nlet options = {\n    parse_mode: \"MarkdownV2\",\n    reply_markup: {\n        force_reply: true\n    }\n}\n\nresponse.payload = {\n    \"content\": \"*Responda a este mensaje* Que URL debo descargar\",\n    \"type\": \"message\",\n    \"chatId\": flow.get('chatId'),\n    \"options\": options\n}\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 360,
        "wires": [
            [
                "c889df91ef6fa488"
            ]
        ]
    },
    {
        "id": "af512362318c3b0d",
        "type": "telegram reply",
        "z": "6cbfdc66b09951e8",
        "name": "User Response",
        "bot": "9af9f5e6a558987d",
        "x": 880,
        "y": 360,
        "wires": [
            [
                "31bb4228623ffd75"
            ]
        ]
    },
    {
        "id": "31bb4228623ffd75",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "Name to save doc",
        "func": "flow.set('downloadUrl', msg.payload.content)\nlet response = {}\nlet options = {\n    parse_mode: \"MarkdownV2\",\n    reply_markup: {\n        force_reply: true\n    }\n}\n\nresponse.payload = {\n    \"content\": \"*Responda a este mensaje* Que nombre desea para grabarlo en la placa de acero\",\n    \"type\": \"message\",\n    \"chatId\": flow.get('chatId'),\n    \"options\": options\n}\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 360,
        "wires": [
            [
                "eeb17e5d08cf0d90"
            ]
        ]
    },
    {
        "id": "eeb17e5d08cf0d90",
        "type": "telegram sender",
        "z": "6cbfdc66b09951e8",
        "name": "",
        "bot": "9af9f5e6a558987d",
        "haserroroutput": false,
        "outputs": 1,
        "x": 710,
        "y": 420,
        "wires": [
            [
                "4e01c518ae160230"
            ]
        ]
    },
    {
        "id": "4e01c518ae160230",
        "type": "telegram reply",
        "z": "6cbfdc66b09951e8",
        "name": "User Response",
        "bot": "9af9f5e6a558987d",
        "x": 900,
        "y": 420,
        "wires": [
            [
                "536fbb5712e225cc"
            ]
        ]
    },
    {
        "id": "495d53dca862ffb0",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "Create command",
        "func": "let downloadUrl = flow.get('downloadUrl')\nlet filename = flow.get('filename')\nlet response = {}\n\nresponse.payload = `${downloadUrl} -o /downloads/${filename}`\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 500,
        "wires": [
            [
                "21145d3738f07fa6"
            ]
        ]
    },
    {
        "id": "21145d3738f07fa6",
        "type": "exec",
        "z": "6cbfdc66b09951e8",
        "command": "curl",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "curl custom url",
        "x": 900,
        "y": 500,
        "wires": [
            [
                "bbde556239dd6660"
            ],
            [],
            []
        ]
    },
    {
        "id": "1289640412b236aa",
        "type": "telegram sender",
        "z": "6cbfdc66b09951e8",
        "name": "Response",
        "bot": "9af9f5e6a558987d",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1220,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "bbde556239dd6660",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "Correct exit",
        "func": "let response = {}\nlet filename = flow.get('filename')\n\nlet options = {\n    parse_mode: \"MarkdownV2\"\n}\n\nresponse.payload = {\n    \"content\": \"La placa *\"+ filename +\"* ha sido grabada correctamente\",\n    \"type\": \"message\",\n    \"chatId\": flow.get('chatId'),\n    \"options\": options\n}\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 480,
        "wires": [
            [
                "1289640412b236aa"
            ]
        ]
    },
    {
        "id": "4be79243ef951e14",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "Create Keyboard",
        "func": "let files = msg.payload\nlet response = {}\n\nfiles = files.split('\\n')\nfiles.pop()\nlet definitiveFiles = []\nfor (let file of files) {\n    definitiveFiles.push([file])\n}\nvar options = {\n    parse_mode: \"MarkdownV2\",\n    reply_markup: {\n        force_reply: true,\n        keyboard: definitiveFiles,\n        //resize_keyboard: true,\n        //one_time_keyboard: true\n    }\n};\n\nresponse.payload = {\n    \"content\": \"*Responda a este mensaje* Cual quieres borrar\",\n    \"type\": \"message\",\n    \"chatId\": flow.get('chatId'),\n    \"options\": options\n}\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 700,
        "wires": [
            [
                "a5b9328e4f258739"
            ]
        ]
    },
    {
        "id": "a5b9328e4f258739",
        "type": "telegram sender",
        "z": "6cbfdc66b09951e8",
        "name": "Cual quiere borrar",
        "bot": "9af9f5e6a558987d",
        "haserroroutput": false,
        "outputs": 1,
        "x": 930,
        "y": 700,
        "wires": [
            [
                "2568ce883dc0deec"
            ]
        ]
    },
    {
        "id": "1e73014ad86b4b9f",
        "type": "debug",
        "z": "6cbfdc66b09951e8",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 140,
        "wires": []
    },
    {
        "id": "6348bd5849289d7c",
        "type": "telegram command",
        "z": "6cbfdc66b09951e8",
        "name": "Remove Resources",
        "command": "/remove_resource",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "9af9f5e6a558987d",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 210,
        "y": 700,
        "wires": [
            [
                "48ba230cedfc63f3"
            ],
            []
        ]
    },
    {
        "id": "6ebf2d3bdc520aaa",
        "type": "exec",
        "z": "6cbfdc66b09951e8",
        "command": "ls /downloads",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "ls resources",
        "x": 550,
        "y": 700,
        "wires": [
            [
                "4be79243ef951e14"
            ],
            [],
            []
        ]
    },
    {
        "id": "48ba230cedfc63f3",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "Save ChatId",
        "func": "flow.set('chatId', msg.payload.chatId)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 700,
        "wires": [
            [
                "6ebf2d3bdc520aaa"
            ]
        ]
    },
    {
        "id": "2568ce883dc0deec",
        "type": "telegram reply",
        "z": "6cbfdc66b09951e8",
        "name": "User Response",
        "bot": "9af9f5e6a558987d",
        "x": 1120,
        "y": 700,
        "wires": [
            [
                "05d6aa4894f620e0"
            ]
        ]
    },
    {
        "id": "05d6aa4894f620e0",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "Create resource path",
        "func": "let response = {}\nlet filename = msg.payload.content\n\nresponse.payload = `/downloads/${filename}`\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 700,
        "wires": [
            [
                "0a6347f5ca4c3236"
            ]
        ]
    },
    {
        "id": "0a6347f5ca4c3236",
        "type": "exec",
        "z": "6cbfdc66b09951e8",
        "command": "rm",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "rm resource",
        "x": 1510,
        "y": 700,
        "wires": [
            [
                "500a6a64abd1cb78"
            ],
            [],
            []
        ]
    },
    {
        "id": "74799fad3a52a466",
        "type": "telegram command",
        "z": "6cbfdc66b09951e8",
        "name": "Test",
        "command": "/test",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "9af9f5e6a558987d",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 170,
        "y": 820,
        "wires": [
            [
                "6e3b962e7324eefb"
            ],
            []
        ]
    },
    {
        "id": "bdaf392f34f30afc",
        "type": "telegram sender",
        "z": "6cbfdc66b09951e8",
        "name": "",
        "bot": "9af9f5e6a558987d",
        "haserroroutput": true,
        "outputs": 2,
        "x": 630,
        "y": 820,
        "wires": [
            [
                "d4285faecbc1a7e9"
            ],
            []
        ]
    },
    {
        "id": "6e3b962e7324eefb",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "function 8",
        "func": "flow.set('chatId', msg.payload.chatId)\nlet response = {}\nlet options = {\n    reply_to_message_id: msg.payload.messageId,\n    \"reply_markup\": {\n        \"force_reply\": true\n    }\n}\n\nresponse.payload = {\n    \"content\": \"Que URL debo descargar\",\n    \"type\": \"message\",\n    \"chatId\": flow.get('chatId'),\n    \"options\": options\n}\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 820,
        "wires": [
            [
                "bdaf392f34f30afc"
            ]
        ]
    },
    {
        "id": "d4285faecbc1a7e9",
        "type": "telegram reply",
        "z": "6cbfdc66b09951e8",
        "name": "",
        "bot": "9af9f5e6a558987d",
        "x": 880,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "500a6a64abd1cb78",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "Borrar el teclado",
        "func": "let response = {}\nlet options = {\n    parse_mode: \"MarkdownV2\",\n    reply_markup: {\n        remove_keyboard: true\n    }\n};\n\nresponse.payload = {\n    \"content\": \"*Recurso borrado*\",\n    \"type\": \"message\",\n    \"chatId\": flow.get('chatId'),\n    \"options\": options\n}\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 700,
        "wires": [
            [
                "958fa129d6457920"
            ]
        ]
    },
    {
        "id": "958fa129d6457920",
        "type": "telegram sender",
        "z": "6cbfdc66b09951e8",
        "name": "Borrar teclado",
        "bot": "9af9f5e6a558987d",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1860,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "be1e7f01392847ac",
        "type": "comment",
        "z": "6cbfdc66b09951e8",
        "name": "ReplyForce y Keyboard",
        "info": "No se pueden hacer un mensaje que fuerce la respuesta y monte un keyboard, hay que ver opciones, dos mensajes con texto, un mensaje con texto tonto y despues editarlo o algo asi",
        "x": 1340,
        "y": 540,
        "wires": []
    },
    {
        "id": "536fbb5712e225cc",
        "type": "function",
        "z": "6cbfdc66b09951e8",
        "name": "Downloading response",
        "func": "flow.set('filename', msg.payload.content)\nlet filename = msg.payload.content;\nlet content = \"Grabando la placa *\" + filename + \"*\";\nlet response = {}\nlet options = {\n    parse_mode: \"MarkdownV2\",\n}\n\nresponse.payload = {\n    \"content\": content,\n    \"type\": \"message\",\n    \"chatId\": flow.get('chatId'),\n    \"options\": options\n}\n\nreturn response;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 420,
        "wires": [
            [
                "fdd5ec1118a25948"
            ]
        ]
    },
    {
        "id": "fdd5ec1118a25948",
        "type": "telegram sender",
        "z": "6cbfdc66b09951e8",
        "name": "",
        "bot": "9af9f5e6a558987d",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1310,
        "y": 420,
        "wires": [
            [
                "495d53dca862ffb0"
            ]
        ]
    }
]